"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _analyticsNextStableReactContext = _interopRequireDefault(require("@atlaskit/analytics-next-stable-react-context"));

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var ContextTypes = {
  getAtlaskitAnalyticsEventHandlers: _propTypes.default.func,
  getAtlaskitAnalyticsContext: _propTypes.default.func
};

var noop = function noop() {
  return [];
}; // eslint-disable-next-line @repo/internal/react/no-class-components


var AnalyticsListener = /*#__PURE__*/function (_Component) {
  (0, _inherits2.default)(AnalyticsListener, _Component);

  var _super = _createSuper(AnalyticsListener);

  function AnalyticsListener(props) {
    var _this;

    (0, _classCallCheck2.default)(this, AnalyticsListener);
    _this = _super.call(this, props);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getChildContext", function () {
      return {
        getAtlaskitAnalyticsEventHandlers: _this.getAnalyticsEventHandlers,
        getAtlaskitAnalyticsContext: _this.getAtlaskitAnalyticsContext
      };
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getAnalyticsEventHandlers", function () {
      var _this$props = _this.props,
          channel = _this$props.channel,
          onEvent = _this$props.onEvent;
      var _this$context$getAtla = _this.context.getAtlaskitAnalyticsEventHandlers,
          getAtlaskitAnalyticsEventHandlers = _this$context$getAtla === void 0 ? noop : _this$context$getAtla;

      var handler = function handler(event, eventChannel) {
        if (channel === '*' || channel === eventChannel) {
          onEvent(event, eventChannel);
        }
      };

      return [handler].concat((0, _toConsumableArray2.default)(getAtlaskitAnalyticsEventHandlers()));
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getAtlaskitAnalyticsContext", function () {
      var _this$context$getAtla2 = _this.context.getAtlaskitAnalyticsContext,
          getAtlaskitAnalyticsContext = _this$context$getAtla2 === void 0 ? noop : _this$context$getAtla2;
      return getAtlaskitAnalyticsContext();
    });
    _this.contextValue = {
      getAtlaskitAnalyticsContext: _this.getAtlaskitAnalyticsContext,
      getAtlaskitAnalyticsEventHandlers: _this.getAnalyticsEventHandlers
    };
    return _this;
  }

  (0, _createClass2.default)(AnalyticsListener, [{
    key: "render",
    value: function render() {
      var children = this.props.children;
      return /*#__PURE__*/_react.default.createElement(_analyticsNextStableReactContext.default.Provider, {
        value: this.contextValue
      }, children);
    }
  }]);
  return AnalyticsListener;
}(_react.Component);

(0, _defineProperty2.default)(AnalyticsListener, "contextTypes", ContextTypes);
(0, _defineProperty2.default)(AnalyticsListener, "childContextTypes", ContextTypes);
var _default = AnalyticsListener;
exports.default = _default;