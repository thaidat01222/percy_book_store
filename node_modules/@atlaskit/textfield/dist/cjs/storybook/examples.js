"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.textField = exports.default = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _react = _interopRequireDefault(require("react"));

var _dom = require("@testing-library/dom");

var _src = _interopRequireDefault(require("../../src"));

var _default = {
  title: 'Examples'
};
exports.default = _default;
var testId = 'text-field-test-id';

var getLastTexfield = function getLastTexfield(container) {
  var textField = container.querySelectorAll("[data-testId=\"".concat(testId, "\"]"));
  return textField[textField.length - 1];
};

var textField = function textField() {
  return /*#__PURE__*/_react.default.createElement(_src.default, {
    placeholder: "new texfield",
    testId: testId,
    width: "large"
  });
};

exports.textField = textField;
var interactionTasks = [{
  name: 'Focus',
  description: 'Render texfield and make input focus',
  run: function () {
    var _run = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(_ref) {
      var container, texfield;
      return _regenerator.default.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              container = _ref.container;
              texfield = getLastTexfield(container);

              _dom.fireEvent.focus(texfield);

            case 3:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    function run(_x) {
      return _run.apply(this, arguments);
    }

    return run;
  }()
}, {
  name: 'Blur',
  description: 'Render texfield and make input blur',
  run: function () {
    var _run2 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2(_ref2) {
      var container, texfield;
      return _regenerator.default.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              container = _ref2.container;
              texfield = getLastTexfield(container);

              _dom.fireEvent.blur(texfield);

            case 3:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee2);
    }));

    function run(_x2) {
      return _run2.apply(this, arguments);
    }

    return run;
  }()
}, {
  name: 'OnChange',
  description: 'Render texfield and make input change',
  run: function () {
    var _run3 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee3(_ref3) {
      var container, texfield;
      return _regenerator.default.wrap(function _callee3$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              container = _ref3.container;
              texfield = getLastTexfield(container);

              _dom.fireEvent.change(texfield, {
                target: {
                  value: 'foo'
                }
              });

            case 3:
            case "end":
              return _context3.stop();
          }
        }
      }, _callee3);
    }));

    function run(_x3) {
      return _run3.apply(this, arguments);
    }

    return run;
  }()
}];
textField.story = {
  name: 'texfield',
  parameters: {
    performance: {
      interactions: interactionTasks
    }
  }
};