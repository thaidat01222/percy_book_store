"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _react = _interopRequireDefault(require("react"));

var _core = require("@emotion/core");

var _colors = require("@atlaskit/theme/colors");

var _components = _interopRequireDefault(require("@atlaskit/theme/components"));

var _constants = require("./constants");

function _templateObject4() {
  var data = (0, _taggedTemplateLiteral2.default)(["\n                  /* We are going to animate this in */\n                  opacity: 0;\n\n                  animation: ", " 1s ease-in-out;\n                  /* When the animation completes, stay at the last frame of the animation */\n                  animation-fill-mode: forwards;\n                  animation-delay: ", "ms;\n                  fill: none;\n                  stroke: ", ";\n                  stroke-width: 1.5;\n                  stroke-linecap: round;\n                  stroke-dasharray: 60;\n                  stroke-dashoffset: inherit;\n                "]);

  _templateObject4 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3() {
  var data = (0, _taggedTemplateLiteral2.default)(["\n                transform-origin: center;\n                animation: ", " 0.86s infinite;\n                animation-delay: ", "ms;\n                animation-timing-function: cubic-bezier(0.4, 0.15, 0.6, 0.85);\n                height: ", "px;\n                width: ", "px;\n                display: inline-block;\n                /* align better inline with text */\n                vertical-align: middle;\n              "]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = (0, _taggedTemplateLiteral2.default)(["\n  from {\n    transform: rotate(50deg);\n    opacity: 0;\n    stroke-dashoffset: 60;\n  }\n  to {\n    transform: rotate(230deg);\n    opacity: 1;\n    stroke-dashoffset: 50;\n  }\n"]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = (0, _taggedTemplateLiteral2.default)(["\n  to { transform: rotate(360deg); }\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

var rotate = (0, _core.keyframes)(_templateObject()); // There are three parts to the load in animation:
// 1. Fade in
// 2. Accelerated spin
// 3. Stretch the spinner line

var loadIn = (0, _core.keyframes)(_templateObject2());

function getStrokeColor(_ref) {
  var mode = _ref.mode,
      appearance = _ref.appearance;

  if (mode === 'light') {
    return appearance === 'inherit' ? _colors.N500 : _colors.N0;
  } // Dark mode: colours provided by Jake Miller


  return appearance === 'inherit' ? _colors.DN900 : _colors.DN500;
}

var _default = /*#__PURE__*/_react.default.memo( /*#__PURE__*/_react.default.forwardRef(function Spinner(_ref2, ref) {
  var testId = _ref2.testId,
      _ref2$appearance = _ref2.appearance,
      appearance = _ref2$appearance === void 0 ? 'inherit' : _ref2$appearance,
      _ref2$delay = _ref2.delay,
      delay = _ref2$delay === void 0 ? 0 : _ref2$delay,
      _ref2$size = _ref2.size,
      providedSize = _ref2$size === void 0 ? 'medium' : _ref2$size;
  var size = typeof providedSize === 'number' ? providedSize : _constants.presetSizes[providedSize];
  return (0, _core.jsx)(_components.default.Consumer, null, function (tokens) {
    var strokeColor = getStrokeColor({
      mode: tokens.mode,
      appearance: appearance
    }); // The Spinner animation uses a combination of two
    // css animations on two separate elements.

    return (0, _core.jsx)("span", {
      /* This span exists to off-load animations from the circle element,
       which were causing performance issues (style recalculations) on Safari and older versions of Chrome.
       This can be removed and styles placed back on the circle element once Safari fixes this bug and off-loads rendering to the GPU from the CPU.
       */
      css: (0, _core.css)(_templateObject3(), rotate, delay, size, size)
    }, (0, _core.jsx)("svg", {
      height: size,
      width: size,
      viewBox: "0 0 16 16",
      xmlns: "http://www.w3.org/2000/svg",
      "data-testid": testId,
      ref: ref,
      css: (0, _core.css)(_templateObject4(), loadIn, delay, strokeColor)
    }, (0, _core.jsx)("circle", {
      cx: "8",
      cy: "8",
      r: "7"
    })));
  });
}));

exports.default = _default;